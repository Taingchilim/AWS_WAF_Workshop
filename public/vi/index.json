[
{
	"uri": "/vi/",
	"title": "AWS Web Application Firewall",
	"tags": [],
	"description": "",
	"content": "AWS WAF là gì AWS WAF là một dịch vụ web application firewall. Dịch vụ này giúp cho bạn bảo vệ ứng dụng Web hay API của bạn khỏi các tấn công từ bên ngoài gây ảnh hưởng đến vận hành, an ninh thông tin hoặc làm tiêu hao tài nguyên hệ thống.\nSử dụng WAF là một cách để phòng bị cho ứng dụng web của bạn. WAF có thể giảm thiểu các mối nguy hại về lỗ hổng như SQL Injection, Cross Site Scripting và các tấn công thông dụng khác nằm trong Top 10 OWASP. WAF cho phép bạn tạo các rule tùy chỉnh nhằm cho phép bạn tùy biến việc ngăn chặn hay cho phép các HTTP request từ bên ngoài trước khi chúng tới được ứng dụng của bạn.\nNội dung Nội dung chúng ta sẽ bao gồm các bài thực hành sau:\n Các bước chuẩn bị Web ACLs và Managed Rules Các Rule Tùy chỉnh Rule Tùy chỉnh Nâng cao Thử nghiệm các Rule Ghi nhận Nhật ký Thu hồi tài nguyên  "
},
{
	"uri": "/vi/1-prerequiste/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "Nội dung:\n Cài đặt Ứng dụng Juice Shop Triển khai một Ứng dụng mẫu  Cài đặt Mac và Linux OS\n Việc cài đặt AWS CLI là hữu dụng nhưng không cần thiết.  AWS CLI sẽ giúp bạn triển khai các rule tùy chỉnh nhanh hơn trong quá trình thực hiện. Hãy đảm bảo bạn đang cài đặt AWS CLI phiên bản mới nhất.    Windows\nỞ bài thực hành này bạn sẽ dùng curl để gửi các HTTP request dùng để test các WAF rule. curl có ở trong Windows Subsystem For Linux.\nNếu như bạn chưa chắc chắn, bạn có thể sử dụng AWS Cloud9 dev environment để hoàn thành bài thực hành này. Cloud9 là môi trường có đầy đủ các công cụ yêu cầu. Với thiết lập mặc định khi khởi tạo, Cloud9 phù hợp với bài thực hành này.\n\rỨng dụng Juice Shop AWS WAF được dùng để triển khai cùng với các Dịch vụ AWS khác như CloudFront distribution, Application Load Balancer hay API Gateway để phục vụ cho ứng dụng web của bạn.\nĐể có thể kiểm thử WAF, bạn cần thiết phải có một ứng dụng.\nỞ trong bài thực hành này, bạn sẽ sử dụng OWASP Juice Shop. Đây là một ứng dụng web mã nguồn mở không bảo mật.\nBạn có thể tham khảo thêm tài liệu Pwning OWASP Juice Shop để biết thêm về ứng dụng và những lỗ hổng của nó chi tiết hơn.\nTriển khai một Ứng dụng mẫu Chọn Region để triển khai Ứng dụng Web theo bảng bên dưới.\nThời gian để CloudFormations stack triển khai sẽ mất tầm 5 phút.\n   Region Launch Template     US East (N. Virginia) (us-east-1)    US East (Ohio) (us-east-2)    US West(Oregon) (us-west-2)    EU (Ireland) (eu-west-1)    EU (London) (eu-west-2)     \r\rLaunch Templates\r\r\reu-west-1.template\r\r(3 ko)\r\r\reu-west-2.template\r\r(3 ko)\r\r\rus-east-1.template\r\r(3 ko)\r\r\rus-east-2.template\r\r(3 ko)\r\r\rus-west-2.template\r\r(3 ko)\r\r\r\rCác bước thực hiện:\n Truy cập vào các CloudFormation stack ở phía trên (tùy theo Region) để tiến hành triển khai.  Nếu muốn, bạn có thể thiết lập stack của bạn với một tên riêng (Tối đa 64 ký tự)  Chọn Next ở cuối trang và giữ các thiết lập mặc định.  Ở trang cuối cùng, hãy nhớ chọn vào lựa chọn I acknowledge that AWS CloudFormation might create IAM resources with custom names. và I acknowledge that AWS CloudFormation might require the following capability: CAPABILITY_AUTO_EXPAND Chọn Create stack để triển khai stack.  Cloudformation sẽ triển khai ứng dụng Juice Shop lên. Hãy đợi cho đến khi tất cả các stack ở trạng thái CREATE_COMPLETE.\n\rTìm giá trị của JuiceShopUrl trong kết quả xuất ra sau khi chạy CloudFormation. Đó là địa chỉ trang web Juice Shop.  Cấu hình biến môi trường JUICESHOP_URL ở giao diện cửa số lệnh của bạn. Bạn sẽ sử dụng URL này để chạy các yêu cầu đến WAF của bạn.  export JUICESHOP_URL=\u0026lt;Your JuiceShopUrl CloudFormation Output\u0026gt;\rBạn có thể truy cập thử trang ứng dụng của bạn.\nBạn có thể tham khảo thêm về WAF với tài liệu AWS WAF documentation.\n\r"
},
{
	"uri": "/vi/6-logging/1-challenges/",
	"title": "Cấu hình Log",
	"tags": [],
	"description": "",
	"content": "Nội dung:\n Thử thách Cấu hình: Logging Kết luận  Thử thách Cửa hàng Nước ép của bạn đang phát triển nhanh chóng. Tuyệt vời! Bây giờ, bạn đang có một tập các rule, bạn dần đần cảm thấy khó nhận ra rule nào chịu trách nhiệm ngăn chặn các request. Như vậy, việc ghi nhận log trở nên hữu ích vào lúc này. Để làm việc này, bạn cần phải bật tính năng ghi nhật ký cho Web ACL của bạn vào S3 bucket. Log của bạn chứa những header, named cookie nhạy cảm. Bạn không muốn nội dung này được ghi nhận lại. Vì vậy bạn cần phải cấu hình loại bỏ các header trong log.\nTìm hiểu thêm tại tài liệu Logging Web ACL Traffic Information.\n\r Tạo một S3 bucket. Đây sẽ là nơi lưu trữ đích của Kinesis Data Firehose.  Đặt aws-waf-logs-workshop- ở phía trước tên để bạn có thể tìm thấy dễ hơn sau này. (VD: aws-waf-logs-workshop-20210124)    Khi sử dụng Kinesis Data Firehose để ghi nhận các WAF request, Firehose name cần phải có tên aws-waf-logs- ở phía trước (VD: aws-waf-logs-workshop-ds-20210125).\n\rTạo một Kinesis Data Firehose delivery stream. Bạn cần chắc rằng sẽ tạo trong region us-east-1. Đây là yêu cầu bắt buộc để ghi nhận log cho CloudFront.  Tên của Kinesis Data Firehose sẽ bắt đầu với aws-waf-logs-workshop-. Đây là yêu cầu bắt buộc của dịch vụ WAF. Sử dụng S3 bucket đã tạo trước đó là nơi lưu trữ đích.   Bật tính năng ghi nhận log cho WAF của bạn. Điều chỉnh lại cookie, đặt tên là Cookie (Juice Shop Cookie) trong log của bạn. Tạo ra một số các lưu lượng sử dụng các request sau. Một vài request sẽ bị chặn bởi những rule mà bạn đã tạo trước đó.  curl \u0026#34;$JUICESHOP_URL?username=admin\u0026#34;\rcurl \u0026#34;${JUICESHOP_URL}?milkshake=banana\u0026amp;favourite-topping=sauce\u0026#34;\rcurl -H \u0026#34;x-milkshake: chocolate\u0026#34; \u0026#34;${JUICESHOP_URL}\u0026#34;\rTải tập tin log từ S3 bucket đã được thiết lập là nơi lưu trữ cho Kinesis Data Firehose. Kiểm tra tập tin log và tìm giá trị Cookie  Xem các vùng đã được điều chỉnh với cấu hình log sử dụng lệnh CLI get-logging-configuration.\n\rCấu hình: Logging \r\rChọn để xem các bước thực hiện\r\r\r Tạo một Kinesis Data Firehose ở us-east-1. Chắc chắn tên bắt đầu với aws-waf-logs-. Ví dụ: aws-waf-logs-workshop. Chọn S3 là nơi lưu trữ đích.  Chọn Web ACL của bạn từ WAF Console Chọn tab Logging and Metrics Chọn Enable logging  Chọn Kinesis Date Firehose mà bạn muốn sử dụng. Ở trong Redacted Fields, chọn Header. Thêm vào giá trị header Cookie  Chạy lệnh curl để tạo ra các luồng dữ liệu  Tải tập tin log ghi nhận vào S3.  Tìm từ khóa Cookie trong tập tin.  \r Kết luận WAF cho phép bạn ghi nhận các nhật kí request và lưu trữ trong nơi lưu trữ đích của Kinesis Data Firehose. Nhật ký cung cấp thông tin về request. Nhật ký đồng thời cung cấp hành động và rule đã tác động lên request. Thông tin này có thể không giá trị khi bạn chạy WAF. Sử dụng tính năng điều chỉnh các vùng nội dung để loại bỏ các thông tin nhạy cảm.\n"
},
{
	"uri": "/vi/5-testing/1-challenges/",
	"title": "Thử thách",
	"tags": [],
	"description": "",
	"content": "Contents:\n Thử thách Configuration: Update your current Rule Test case  Thử thách Bạn đã định nghĩa được một rule mới cho WAF của bạn. Trước khi triển khai chúng, bạn cần phải kiểm thử trước. Việc này nhằm giảm nguy cơ bạn vô tình chặn các request hợp lệ.\nRule bên dưới sẽ chặn các request với thông số truy xuất vào username.\nĐọc thêm về kiểm thử Web ACLs\n Cập nhật hành động của Rule thành Count  \r\rChọn để xem hướng dẫn thực hiện\r\r\r{\r\u0026#34;Name\u0026#34;: \u0026#34;count-von-count\u0026#34;,\r\u0026#34;Priority\u0026#34;: 0,\r\u0026#34;Action\u0026#34;: {\r\u0026#34;Block\u0026#34;: {}\r},\r\u0026#34;VisibilityConfig\u0026#34;: {\r\u0026#34;SampledRequestsEnabled\u0026#34;: true,\r\u0026#34;CloudWatchMetricsEnabled\u0026#34;: true,\r\u0026#34;MetricName\u0026#34;: \u0026#34;count-von-count\u0026#34;\r},\r\u0026#34;Statement\u0026#34;: {\r\u0026#34;SizeConstraintStatement\u0026#34;: {\r\u0026#34;FieldToMatch\u0026#34;: {\r\u0026#34;SingleQueryArgument\u0026#34;: {\r\u0026#34;Name\u0026#34;: \u0026#34;username\u0026#34;\r}\r},\r\u0026#34;ComparisonOperator\u0026#34;: \u0026#34;GT\u0026#34;,\r\u0026#34;Size\u0026#34;: \u0026#34;0\u0026#34;,\r\u0026#34;TextTransformations\u0026#34;: [\r{\r\u0026#34;Type\u0026#34;: \u0026#34;NONE\u0026#34;,\r\u0026#34;Priority\u0026#34;: 0\r}\r]\r}\r}\r}\r\r\r Triển khai rule của bạn thông qua CLI hoặc Console.  Configuration: Update your current Rule \r\rChọn để xem hướng dẫn thực hiện\r\r\r Cập nhật hành động của Rule thành Count  {\r\u0026#34;Name\u0026#34;: \u0026#34;count-von-count\u0026#34;,\r\u0026#34;Priority\u0026#34;: 0,\r\u0026#34;Action\u0026#34;: {\r\u0026#34;Count\u0026#34;: {}\r},\r\u0026#34;VisibilityConfig\u0026#34;: {\r\u0026#34;SampledRequestsEnabled\u0026#34;: true,\r\u0026#34;CloudWatchMetricsEnabled\u0026#34;: true,\r\u0026#34;MetricName\u0026#34;: \u0026#34;count-von-count\u0026#34;\r},\r\u0026#34;Statement\u0026#34;: {\r\u0026#34;SizeConstraintStatement\u0026#34;: {\r\u0026#34;FieldToMatch\u0026#34;: {\r\u0026#34;SingleQueryArgument\u0026#34;: {\r\u0026#34;Name\u0026#34;: \u0026#34;username\u0026#34;\r}\r},\r\u0026#34;ComparisonOperator\u0026#34;: \u0026#34;GT\u0026#34;,\r\u0026#34;Size\u0026#34;: \u0026#34;0\u0026#34;,\r\u0026#34;TextTransformations\u0026#34;: [\r{\r\u0026#34;Type\u0026#34;: \u0026#34;NONE\u0026#34;,\r\u0026#34;Priority\u0026#34;: 0\r}\r]\r}\r}\r}\rTạo một rule mới trong console, Đổi sang sử dụng trình biên soạn JSON và nhập rule. Gửi một số request chứa thông số username đến Ứng dụng web của bạn. Truy xuất đến trang CloudWatch Metrics. Chọn AWS/WAFv2, sau đó chọn Region \u0026gt; Rule \u0026gt; WebACL để xem thông tin.  \r Test case Thực thi câu lệnh sau trong giao diện dòng lệnh.\ncurl \u0026#34;$JUICESHOP_URL?username=admin\u0026#34;\rRequest này sẽ không bị chặn nhưng sẽ được ghi nhận bộ đếm. Hãy kiểm tra CloudWatch metrics xem rule của bạn có hoạt động không.\nTrước khi triển khai một rule mới vòa Web ACL cua bạn, hãy kiểm thử nó. Kiểm thử mộtrule mới với hành cộng Count, giám sát nó thông qua CloudWatch metrics.\n"
},
{
	"uri": "/vi/3-custom-rules/1-challenges/",
	"title": "Thử thách ACL và Rule",
	"tags": [],
	"description": "",
	"content": "Contents:\n Thử thách Cấu hình: Tạo custome rule Kiểm thử hoạt động  Thử thách Ngay khi bạn nghĩ là bạn đã ngăn chặn được các tấn công từ nhóm Sữa Lắc, lại có thêm các request tấn công vào ứng dụng của bạn. Các tấn công này ngày càng nguy hiểm hơn. Tuy nhiên bạn có thể tự tin có thể chặn các tấn công này bằng các rule tùy biến cho WAF Web ACL của bạn.\nTất cả các tấn công có vẻ như đều có các header lạ X-TomatoAttack và bạn cần ngăn chặn các request có header này sẽ chặn được đợt tấn công này.\n\r\rChọn vào đây để xem gợi ý\r\r\r Tạo một custome rule Request được gửi đến có một header cụ thể. Độ dài header này là bao nhiêu?  \r Cấu hình: Tạo custome rule Tạo một rule trong Web ACL dùng để chặn các request với header X-TomatoAttack với bất kì giá trị nào.\n\r\rChọn để xem các bước thực hiện\r\r\r Ở trang thông tin Web ACL của bạn, chọn tab Rules. Chọn Add Rules \u0026gt; Add my own rules and rule groups.  Ở trang Add rule, sử dụng Rule builder để xây dựng custom rule của bạn:  Ở mục Rule:  Name: Nhập tên rule (VD: MyCustomRule-X-TomatoAttack) Type: Regular rule   If a request: matches the statement Ở mục Statement:  Inspect: Header Header field name: X-TomatoAttack Match type: Size greater or equal to Size: 0   Ở mục Action: Chọn Block Chọn Add Rule \u0026gt; Save để thêm Rule vào Web ACL.    \r Bạn có thể đạt được kết quả tương tự nếu dùng regasdular expression.\nNếu Rule của bạn không hoạt động, hãy kiểm tra các thông tin sau:\n Web ACL đã liên kết đến Application Load Balancer hay chưa? Giá trị Header field name có được nhập chính xác hay chưa?  Kiểm thử hoạt động Bước kiểm thử này sẽ thực hiện gửi request đến ứng dụng của bạn. Nếu WAF rule hoạt động, request sẽ bị chặn lại và bạn sẽ nhận được thông báo 403 như bên dưới.\n\u0026lt;!DOCTYPE html PUBLIC \u0026#34;-//W3C//DTD HTML 4.01 Transitional//EN\u0026#34; \u0026#34;http://www.w3.org/TR/html4/loose.dtd\u0026#34;\u0026gt;\r\u0026lt;html\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta http-equiv=\u0026#34;Content-Type\u0026#34; content=\u0026#34;text/html; charset=iso-8859-1\u0026#34; /\u0026gt;\r\u0026lt;title\u0026gt;ERROR: The request could not be satisfied\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;h1\u0026gt;403 ERROR\u0026lt;/h1\u0026gt;\r\u0026lt;!-- Omitted --\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rTrong cửa sổ lệnh, chạy lệnh sau:\n# Set the JUICESHOP_URL variable if not already done\r# JUICESHOP_URL=\u0026lt;Your Juice Shop URL\u0026gt;\r# This should be blocked\rcurl -H \u0026#34;X-TomatoAttack: Red\u0026#34; \u0026#34;${JUICESHOP_URL}\u0026#34;\r# This should be blocked\rcurl -H \u0026#34;X-TomatoAttack: Green\u0026#34; \u0026#34;${JUICESHOP_URL}\u0026#34;\rKiểm tra thông tin WebACL overview to see the sampled requests. Bạn sẽ thấy các request nhận được có trạng thái BLOCK.\nKhi hoàn tất nghĩa là custom rule của bạn đã hoạt động.\nCustom rule cho phép bạn tùy chỉnh logic của bạn để xử lý các request trong WAF. Custom rule có thể xem xét và đánh giá nhiều thành phần của request và sau đó thực hiện chặn hoặc cho phép request đó nếu chúng đúng theo định nghĩa của rule.\nMỗi Web ACL có giới hạn là 1500 Web ACL Capacity Units (WCU) và giới hạn này có thể tăng lên thông qua yêu cầu đến AWS Support. Mỗi rule và nhóm rule trong Web ACL sẽ được tính vào giới hạn này.\n"
},
{
	"uri": "/vi/4-advanced-rules/1-challenges/",
	"title": "Thử thách Rule Nâng cao",
	"tags": [],
	"description": "",
	"content": "Contents:\n Thử thách Cập nhật JSON Rule Test Case  Thử thách Băng nhóm Sữa Lắc lại tiếp tục tấn công ứng dụng của bạn. Chúng đã thay đổi cách tấn công một lần nữa! Bạn cần phải tạo ra một rule mới để chặn các request xấu xa này trong khi vẫn cho phép khách hàng thực sự gửi request.\nLần này, bạn sẽ khởi đầu với rule căn bản như sau:\n\r\rChọn để xem rule khởi đầu\r\r\r{\r\u0026#34;Name\u0026#34;: \u0026#34;complex-rule-challenge\u0026#34;,\r\u0026#34;Priority\u0026#34;: 0,\r\u0026#34;Action\u0026#34;: {\r\u0026#34;Block\u0026#34;: {}\r},\r\u0026#34;VisibilityConfig\u0026#34;: {\r\u0026#34;SampledRequestsEnabled\u0026#34;: true,\r\u0026#34;CloudWatchMetricsEnabled\u0026#34;: true,\r\u0026#34;MetricName\u0026#34;: \u0026#34;complex-rule-challenge\u0026#34;\r},\r\u0026#34;Statement\u0026#34;: {\r\u0026#34;OrStatement\u0026#34;: {\r\u0026#34;Statements\u0026#34;: [\r{\r\u0026#34;ByteMatchStatement\u0026#34;: {\r\u0026#34;FieldToMatch\u0026#34;: {\r\u0026#34;SingleHeader\u0026#34;: {\r\u0026#34;Name\u0026#34;: \u0026#34;x-milkshake\u0026#34;\r}\r},\r\u0026#34;PositionalConstraint\u0026#34;: \u0026#34;EXACTLY\u0026#34;,\r\u0026#34;SearchString\u0026#34;: \u0026#34;chocolate\u0026#34;,\r\u0026#34;TextTransformations\u0026#34;: [\r{\r\u0026#34;Type\u0026#34;: \u0026#34;NONE\u0026#34;,\r\u0026#34;Priority\u0026#34;: 0\r}\r]\r}\r},\r{\r\u0026#34;ByteMatchStatement\u0026#34;: {\r\u0026#34;FieldToMatch\u0026#34;: {\r\u0026#34;SingleQueryArgument\u0026#34;: {\r\u0026#34;Name\u0026#34;: \u0026#34;milkshake\u0026#34;\r}\r},\r\u0026#34;PositionalConstraint\u0026#34;: \u0026#34;EXACTLY\u0026#34;,\r\u0026#34;SearchString\u0026#34;: \u0026#34;banana\u0026#34;,\r\u0026#34;TextTransformations\u0026#34;: [\r{\r\u0026#34;Type\u0026#34;: \u0026#34;NONE\u0026#34;,\r\u0026#34;Priority\u0026#34;: 0\r}\r]\r}\r}\r]\r}\r}\r}\r\r\r Hiện tại, rule này sẽ chặn tất cả các request thỏa hai điều kiện:\n Chứa header x-milkshake: chocolate Chứa query parameter milkshake=banana  Rule này hoạt động, nhưng kẻ tấn công đã thay đổi phương pháp. Các request xấu bây giờ bao gồm như sau:\n Chứa header x-milkshake: chocolate và cả header x-favourite-topping: nuts Chứa query parameter milkshake=banana và cả query parameter favourite-topping=sauce  Bạn cần cập nhật lại rule hiện tại bằng việc sử dụng AndStatement để mở rộng rule hiện tại với 2 statement. Cấu trúc của AndStatement như sau:\n\u0026#34;AndStatement\u0026#34;: {\r\u0026#34;Statements\u0026#34;: [\r# Statement sẽ viết ở đây\r]\r}\rCập nhật JSON Rule Sau khi cập nhật lại rule, chúng ta sẽ có rule cuối cùng như sau:\n\r\rChọn để xem rule cập nhật\r\r\r{\r\u0026#34;Name\u0026#34;: \u0026#34;complex-rule-challenge\u0026#34;,\r\u0026#34;Priority\u0026#34;: 0,\r\u0026#34;Action\u0026#34;: {\r\u0026#34;Block\u0026#34;: {}\r},\r\u0026#34;VisibilityConfig\u0026#34;: {\r\u0026#34;SampledRequestsEnabled\u0026#34;: true,\r\u0026#34;CloudWatchMetricsEnabled\u0026#34;: true,\r\u0026#34;MetricName\u0026#34;: \u0026#34;complex-rule-challenge\u0026#34;\r},\r\u0026#34;Statement\u0026#34;: {\r\u0026#34;OrStatement\u0026#34;: {\r\u0026#34;Statements\u0026#34;: [\r{\r\u0026#34;AndStatement\u0026#34;: {\r\u0026#34;Statements\u0026#34;: [\r{\r\u0026#34;ByteMatchStatement\u0026#34;: {\r\u0026#34;FieldToMatch\u0026#34;: {\r\u0026#34;SingleHeader\u0026#34;: {\r\u0026#34;Name\u0026#34;: \u0026#34;x-milkshake\u0026#34;\r}\r},\r\u0026#34;PositionalConstraint\u0026#34;: \u0026#34;EXACTLY\u0026#34;,\r\u0026#34;SearchString\u0026#34;: \u0026#34;chocolate\u0026#34;,\r\u0026#34;TextTransformations\u0026#34;: [\r{\r\u0026#34;Type\u0026#34;: \u0026#34;NONE\u0026#34;,\r\u0026#34;Priority\u0026#34;: 0\r}\r]\r}\r},\r{\r\u0026#34;ByteMatchStatement\u0026#34;: {\r\u0026#34;FieldToMatch\u0026#34;: {\r\u0026#34;SingleHeader\u0026#34;: {\r\u0026#34;Name\u0026#34;: \u0026#34;x-favourite-topping\u0026#34;\r}\r},\r\u0026#34;PositionalConstraint\u0026#34;: \u0026#34;EXACTLY\u0026#34;,\r\u0026#34;SearchString\u0026#34;: \u0026#34;nuts\u0026#34;,\r\u0026#34;TextTransformations\u0026#34;: [\r{\r\u0026#34;Type\u0026#34;: \u0026#34;NONE\u0026#34;,\r\u0026#34;Priority\u0026#34;: 0\r}\r]\r}\r}\r]\r}\r},\r{\r\u0026#34;AndStatement\u0026#34;: {\r\u0026#34;Statements\u0026#34;: [\r{\r\u0026#34;ByteMatchStatement\u0026#34;: {\r\u0026#34;FieldToMatch\u0026#34;: {\r\u0026#34;SingleQueryArgument\u0026#34;: {\r\u0026#34;Name\u0026#34;: \u0026#34;milkshake\u0026#34;\r}\r},\r\u0026#34;PositionalConstraint\u0026#34;: \u0026#34;EXACTLY\u0026#34;,\r\u0026#34;SearchString\u0026#34;: \u0026#34;banana\u0026#34;,\r\u0026#34;TextTransformations\u0026#34;: [\r{\r\u0026#34;Type\u0026#34;: \u0026#34;NONE\u0026#34;,\r\u0026#34;Priority\u0026#34;: 0\r}\r]\r}\r},\r{\r\u0026#34;ByteMatchStatement\u0026#34;: {\r\u0026#34;FieldToMatch\u0026#34;: {\r\u0026#34;SingleQueryArgument\u0026#34;: {\r\u0026#34;Name\u0026#34;: \u0026#34;favourite-topping\u0026#34;\r}\r},\r\u0026#34;PositionalConstraint\u0026#34;: \u0026#34;EXACTLY\u0026#34;,\r\u0026#34;SearchString\u0026#34;: \u0026#34;sauce\u0026#34;,\r\u0026#34;TextTransformations\u0026#34;: [\r{\r\u0026#34;Type\u0026#34;: \u0026#34;NONE\u0026#34;,\r\u0026#34;Priority\u0026#34;: 0\r}\r]\r}\r}\r]\r}\r}\r]\r}\r}\r}\r\r Test Case Kiểm tra hoạt động của rul emoiws bằng việc chạy các câu lệnh sau:\n# Set the JUICESHOP_URL if not already done\rexport JUICESHOP_URL=\u0026lt;Your Juice Shop URL\u0026gt;\r# Allowed\rcurl -H \u0026#34;x-milkshake: chocolate\u0026#34; \u0026#34;${JUICESHOP_URL}\u0026#34;\rcurl \u0026#34;${JUICESHOP_URL}?milkshake=banana\u0026#34;\r# Blocked\rcurl -H \u0026#34;x-milkshake: chocolate\u0026#34; -H \u0026#34;x-favourite-topping: nuts\u0026#34; \u0026#34;${JUICESHOP_URL}\u0026#34;\rcurl \u0026#34;${JUICESHOP_URL}?milkshake=banana\u0026amp;favourite-topping=sauce\u0026#34;\rCác request bị chặn sẽ có phản hồi như sausau:\n\u0026lt;!DOCTYPE html PUBLIC \u0026#34;-//W3C//DTD HTML 4.01 Transitional//EN\u0026#34; \u0026#34;http://www.w3.org/TR/html4/loose.dtd\u0026#34;\u0026gt;\r\u0026lt;html\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta http-equiv=\u0026#34;Content-Type\u0026#34; content=\u0026#34;text/html; charset=iso-8859-1\u0026#34; /\u0026gt;\r\u0026lt;title\u0026gt;ERROR: The request could not be satisfied\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;h1\u0026gt;403 ERROR\u0026lt;/h1\u0026gt;\r\u0026lt;!-- Omitted --\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rỞ phần này, bạn đã hiểu được cách để định nghĩa WAF rule ở định dạng JSON. Các logic phức tạp cần phải được định nghĩa sử dụng các toán tử AND, OR và NOT.\n"
},
{
	"uri": "/vi/2-acls-managed-rules/1-challenges/",
	"title": "Web ACLs and Managed Rules",
	"tags": [],
	"description": "",
	"content": "Nội dung:\n Thử thách của bạn Cấu hình: Tạo Web ACL Cấu hình: Thêm Nhóm rule dựng sẵn Kiểm thử hoạt động  Thử thách của bạn Giả sử bạn là một lập trình viên đơn độc đang bắt đầu với cửa hàng Juice Shop (Nước Trái Cây). Website của bạn là một ứng dụng web đơn giản chạy với cơ sở dữ liệu SQL. Vì một số lý do nào đó, nhóm tin tặc Milkshake (nhóm Sữa Lắc) đang bắt đầu tấn công vào trang web của bạn.\nRất may là ngay lúc này bạn đang tiếp cận tới AWS WAF. Vậy là bạn quyết định sẽ triển khai WAF để bảo vệ trang web của bạn.\nNgoài ra thì ngay lúc này, bạn đang không có nhiều thời gian nên bạn sẽ quyết định sẽ sử dụng Nhóm các rule dựng sẵn bởi AWS cho Web ACL của bạn. Với các rule này, website của bạn sẽ được bảo vệ khỏi các tấn công thông thường từ phía nhóm Sữa Lắc.\nCấu hình: Tạo Web ACL Tạo Web ACL từ WAF console.\n\r\rChọn để xem các bước thực hiện\r\r\r Truy cập AWS WAF Console. Chọn Create web ACL để bắt đầu. Nhập các thông tin cho Web ACL của bạn:. Set the Region to the Global (CloudFront).  Name: waf-workshop-juice-shop CloudWatch metric name: Giữ giá trị mặc định. (VD: waf-workshop-juice-shop) Description: Web ACL for the aws-waf-workshop. Resource type: CloudFront distributions    Trong mục Associated AWS resources chọn Add AWS resources.  Chọn CloudFront distribution.  \r Liên kết Web ACL vào CloudFront distribution của bạn\n\r\rChọn để xem các chú ý\r\r\rNếu CloudFront distribution không hiển thị khi bạn thiết lập liên kết, hãy kiểm tra:\n Thiết lập Resource type bạn đã chọn CloudFront Distribution hay chưa? CloudFormation template ở Phần 1 - Các bước chuẩn bị đã được triển khai hoàn tất hay chưa?  \r Cấu hình: Thêm Nhóm rule dựng sẵn Bạn sẽ thêm hai nhóm rule vào Web ACL.\n\r\rChọn để xem các bước thực hiện\r\r\r Ở trang thông tin Web ACL bạn đã tạo, chọn tab Rules. Chọn Add Rules \u0026gt; Add Managed Rule Groups.  Chọn Core Rule Set và SQL Database từ lựa chọn AWS managed rule groups.  Chọn Add rules để thêm vào Web ACL của bạn. Chọn Next ở Step 3 và Step 4. Sau đó chọn Create web ACL ở Step 5 để tạo Web ACL.  \r Kiểm thử hoạt động Kiểm thử rule mới của bạn với lệnh sau:\nHãy đảm bảo bạn đã thiết lập biến JUICESHOP_URL với đường dẫn đến Juice Shop của bạn\n\rexport JUICESHOP_URL=\u0026lt;Your Juice Shop URL\u0026gt;\r# This imitates a Cross Site Scripting attack\r# This request should be blocked.\rcurl -X POST $JUICESHOP_URL -F \u0026#34;user=\u0026#39;\u0026lt;script\u0026gt;\u0026lt;alert\u0026gt;Hello\u0026gt;\u0026lt;/alert\u0026gt;\u0026lt;/script\u0026gt;\u0026#39;\u0026#34;\r# This imitates a SQL Injection attack\r# This request should be blocked.\rcurl -X POST $JUICESHOP_URL -F \u0026#34;user=\u0026#39;AND 1=1;\u0026#34;\r Nếu request bị chặn, bạn sẽ nhận lại một phải hồi với tình trạng bị ngăn chặn. Nội dung sẽ tương tự như bên dưới.  \u0026lt;!DOCTYPE html PUBLIC \u0026#34;-//W3C//DTD HTML 4.01 Transitional//EN\u0026#34; \u0026#34;http://www.w3.org/TR/html4/loose.dtd\u0026#34;\u0026gt;\r\u0026lt;html\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta http-equiv=\u0026#34;Content-Type\u0026#34; content=\u0026#34;text/html; charset=iso-8859-1\u0026#34; /\u0026gt;\r\u0026lt;title\u0026gt;ERROR: The request could not be satisfied\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;h1\u0026gt;403 ERROR\u0026lt;/h1\u0026gt;\r\u0026lt;!-- Omitted --\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r Nếu nội dung trả về như sau nghĩa là yêu cầu chưa bị chặn bởi WAF.  \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt;\r\u0026lt;title\u0026gt;OWASP Juice Shop\u0026lt;/title\u0026gt;\r// Omitted for brevity\r\u0026lt;/head\u0026gt;\r\u0026lt;/html\u0026gt;\rTrong trường hợp này, đã có thiết lập chưa đúng. Hãy kiểm tra lại các thông tin sau:\n Web ACL của bạn đã liên kết với CloudFront distribution chưa?  Nếu chưa, CloudFront distribution sẽ không được bảo vệ bởi các rule thiết lập trong Web ACL.   Web ACL của bạn đã áp dụng các nhóm rule như ở trên (Core Rule Set và SQL Database) chưa?  Nếu các nhóm rule chưa được áp dụng thì Web ACL của bạn sẽ không ngăn chặn các request được gửi tới.    "
},
{
	"uri": "/vi/2-acls-managed-rules/",
	"title": "Web ACLs and Managed Rules",
	"tags": [],
	"description": "",
	"content": "Nội dung:\n Web ACLs Các Rule Dựng sẵn  Web ACLs Web ACL (Web Access Control List) là cốt lỗi của việc triển khai AWS WAF. Nó bao gồm các rule được sử dụng để đánh giá các yêu cầu được gửi tới WAF của bạn. Web ACL được áp dụng lên ứng dụng web của bạn thông qua Amazon CloudFront distribution, AWS API Gateway API hay một AWS Application Load Balancer.\nBài thực hành này sử dụng phiên bản mới nhất của AWS WAF. Hãy đảm bảo bạn không sử dụng WAF Classic.\n\rCác Rule Dựng sẵn Cách nhanh nhất để bắt đầu với WAF là triển khai Nhóm các Rule dựng sẵn cho AWS WAF cho Web ACL của bạn.\nNhóm các Rule dựng sẵn là một bộ các rule được tạo và cập nhật bởi đội ngũ AWS hoặc các bên thứ 3 trên AWS Marketplace. Những rule này cung cấp khả năng bảo vệ ứng dụng của bạn khỏi các tấn công thông dụng hoặc đặc thù cho từng loại ứng dụng.\nMỗi nhóm các rule dựng sẵn sẽ có thể bảo vệ ứng dụng khói một tập các tấn công thông thường. Ví dụ như các tấn công đến SQL hay Command Line.\nAWS cung cấp nhiều sự lựa chọn cho nhóm các rule dựng sẵn. Điển hình như ba loại Amazon IP Reputation list, Known Bad Inputs và Core rule set. Ngoài ra còn những nhóm các rule khác có thể được sử dụng.\n"
},
{
	"uri": "/vi/3-custom-rules/",
	"title": "Các Rule Tùy chỉnh",
	"tags": [],
	"description": "",
	"content": "Nội dung:\n Custom Rule Tạo Custom Rule Tạo mẫu các Request Web ACL Capacity Units  Custom Rule WAF cho phép bạn tạo các rule tùy chỉnh để xử lý các request. Việc này rất hữu ích khi bạn muốn tùy biến theo ngữ cảnh ứng dụng của bạn. Cùng với giới thiệu rule tùy chỉnh, phần này bạn sẽ được làm quèn với việc tạo mẫu các request và Web ACL Capacity Units.\nTạo Custom Rule Cách đơn giản nhất để tạo các rule tùy chỉnh là sử dụng Trình biên soạn ở trong WAF Console.\nRules cho phép bạn kiểm tra các thành phần trong một HTTP request như:\n Source IP (Địa chỉ IP nguồn) Headers (Các header của gói tin) Body (Nội dung chính) URI (Liên kết được gửi đến) Query Parameters (Các thông số truy xuất)  Dựa trên các nội dung mà bạn cần xem xét, bạn có thể chặn hoặc cho phép request đó.\nTạo mẫu các Request WAF cho phép bạn xem các mẫu request đã xử lý. Bạn có thể thực hiện chúng từ Web ACL Dashboard.\nĐây là công cụ hữu ích cho bạn khi kiểm lỗi nhằm biết được các request được gửi đến là gì và đã được xử lý như thế nào.\nNgoài ra chúng còn ghi nhận lại tất cả các request mà Web ACL của bạn nhận được. Chúng ta sẽ đề cập với nội dung này sau.\nWeb ACL Capacity Units Web ACL của bạn có tối đa 1500 WCU. Hạn mức này có thể được tăng thêm thông qua việc gửi yêu cầu đến AWS Support.\n\rBạn có thể tham khảo thêm ở tài liệu Thông tin chi tiết về WCU\n"
},
{
	"uri": "/vi/4-advanced-rules/",
	"title": "Rule Tùy chỉnh (Nâng cao)",
	"tags": [],
	"description": "",
	"content": "You’ve created a simple WAF rule that evaluates one part of a request. How could you create a rule to evaulate multiple parts of a request?\nContents:\n Định nghĩa Rule bằng JSON Logic luận lý trong Rule Ví dụ  Định nghĩa Rule bằng JSON Tất cả WAF Rule được định nghĩa là một JSON Object. Đối với các rule phức tạp, bạn sẽ dễ dàng xử lý hơn nếu làm việc trực tiếp ở định dạng JSON thay vì sử dụng Rule Editor trên console. Bạn có thể lấy các thông tin của rule hiện tại được định nghĩa bằng JSON thông qua sử dụng bằng API, CLI hoặc Console sử dụng lệnh get-rule-group. Chỉnh sửa chúng sử dụng trình biên soạn JSON mà bạn muốn và tải chúng lên với lệnh update-rule-group sử dụng API, CLI hoặc Console.\nĐịnh nghĩa rule sử dụng JSON cho phép bạn áp dụng việc quản lý phiên bản nhằm dễ dàng xem xét cách thức, thời điểm và lý do một tập các rule phức tạp được thay đổi.\nCấu trúc để định nghĩa rule trong JSON được cung cấp trong tài liệu update-rule-group\n\rNếu bạn chưa chắc chắn về cấu trúc, bạn có thể sử dụng Console visual editor để tạo một rule đơn giản sau đó chuyển sang JSON editor để xem dưới dạng JSON.\nLogic luận lý trong Rule Các toán tử AND, OR và NOT có thể được sử dụng cho các trường hợp phức tạp. Việc này sẽ hữu ích khi phân tích nhiều phần của một request. Ví dụ như bạn có thể chỉ cho phép một request nếu như chuỗi truy xuất hoặc header chứa một khóa/giá trị nhất định.\nCác rule lồng nhau có thể được tạo ra sử dụng visual editor. Tuy nhiên chúng chỉ giới hạn ở 1 lớp lồng nhau.\nĐể tạo các rule lồng nhau tùy biến trong console, bạn bắt buộc phải sử dụng JSON.\nSử dụng lựa chọn Validate để kiểm tra tính chính xác của rule đó.\n\rBên dưới là một ví dụ của rule được tạo trong console. Rule này sẽ chặn các request với chuỗi truy xuất với độ dài lớn hơn hoặc bằng 0.\nRule này sẽ chặn tất cả các request chứa chuỗi truy xuất dữ liệu.\n\rĐây là rule được tạo dưới định dạng JSON.\n Các hành động được xác định bởi hành động của WAF nếu request chính xác với định nghĩa của rule. VisibilityConfig được sử dụng để cấu hình các mẫu request và CloudWatch metrics Statement định nghĩa các điều kiện để đánh giá rule.  {\r\u0026#34;Name\u0026#34;: \u0026#34;example-rule-01\u0026#34;,\r\u0026#34;Priority\u0026#34;: 0,\r\u0026#34;Action\u0026#34;: {\r\u0026#34;Block\u0026#34;: {}\r},\r\u0026#34;VisibilityConfig\u0026#34;: {\r\u0026#34;SampledRequestsEnabled\u0026#34;: true,\r\u0026#34;CloudWatchMetricsEnabled\u0026#34;: true,\r\u0026#34;MetricName\u0026#34;: \u0026#34;example-rule-01\u0026#34;\r},\r\u0026#34;Statement\u0026#34;: {\r\u0026#34;SizeConstraintStatement\u0026#34;: {\r\u0026#34;FieldToMatch\u0026#34;: {\r\u0026#34;QueryString\u0026#34;: {}\r},\r\u0026#34;ComparisonOperator\u0026#34;: \u0026#34;GT\u0026#34;,\r\u0026#34;Size\u0026#34;: \u0026#34;0\u0026#34;,\r\u0026#34;TextTransformations\u0026#34;: [\r{\r\u0026#34;Type\u0026#34;: \u0026#34;NONE\u0026#34;,\r\u0026#34;Priority\u0026#34;: 0\r}\r]\r}\r}\r}\rVí dụ Đồng nghiệp của bạn đang cần tư vấn của bạn, khi họ đang gặp phải một tấn công. Họ cần chặn các request tấn công đồng thời không chặn các request đến từ các khách hàng thực sự của họ. Các request tấn công chứa nội dung có kích thước lớn hơn 100KB, không có header x-upload-photo: true.\nBạn nhanh chóng nhận ra không thể định nghĩa rule này sử dụng rule editor ở giao diện console. Bạn cần phải sử dụng đến JSON.\nBạn bắt đầu với một rule trắng:\n{\r\u0026#34;Name\u0026#34;: \u0026#34;example-rule-02\u0026#34;,\r\u0026#34;Priority\u0026#34;: 0,\r\u0026#34;Action\u0026#34;: {\r\u0026#34;Block\u0026#34;: {}\r},\r\u0026#34;VisibilityConfig\u0026#34;: {\r\u0026#34;SampledRequestsEnabled\u0026#34;: true,\r\u0026#34;CloudWatchMetricsEnabled\u0026#34;: true,\r\u0026#34;MetricName\u0026#34;: \u0026#34;example-rule-02\u0026#34;\r},\r\u0026#34;Statement\u0026#34;: {\r// Chúng ta sẽ định nghĩa các statement ở đây\r}\r}\rCó hai trường hợp cần phải cân nhắc như sau:\n Nếu như nội dung request lớn hơn 100KB, chặn request đó. Nếu như header của request không chứa cặp khóa/giá trị x-upload-body: true, chặn request đó.  Chúng ta sẽ cần phải sử dụng đến OrStatement và NotStatement để mô tả phần logic này.\n{\r// fields omitted for brevity\r\u0026#34;Statement\u0026#34;: {\r\u0026#34;OrStatement\u0026#34;: {\r\u0026#34;Statements\u0026#34;: [\r{\r// Inspect Body Size here\r},\r{\r\u0026#34;NotStatement\u0026#34;: {\r// Inspect Header here\r}\r}\r]\r}\r}\rĐể phân tích kích thước nội dung, chúng ta sẽ sử dụng SizeConstraintStatement để xem xét request.\n\u0026#34;SizeConstraintStatement\u0026#34;: {\r\u0026#34;FieldToMatch\u0026#34;: {\r\u0026#34;Body\u0026#34;: {}\r},\r\u0026#34;ComparisonOperator\u0026#34;: \u0026#34;GT\u0026#34;,\r\u0026#34;Size\u0026#34;: \u0026#34;100\u0026#34;,\r\u0026#34;TextTransformations\u0026#34;: [\r{\r\u0026#34;Type\u0026#34;: \u0026#34;NONE\u0026#34;,\r\u0026#34;Priority\u0026#34;: 0\r}\r]\r}\rĐể phân tích Header của request, chúng ta sẽ sử dụng ByteMatchStatement.\n\u0026#34;ByteMatchStatement\u0026#34;: {\r\u0026#34;FieldToMatch\u0026#34;: {\r\u0026#34;SingleHeader\u0026#34;: {\r\u0026#34;Name\u0026#34;: \u0026#34;x-upload-image\u0026#34;\r}\r},\r\u0026#34;PositionalConstraint\u0026#34;: \u0026#34;EXACTLY\u0026#34;,\r\u0026#34;SearchString\u0026#34;: \u0026#34;true\u0026#34;,\r\u0026#34;TextTransformations\u0026#34;: [\r{\r\u0026#34;Type\u0026#34;: \u0026#34;NONE\u0026#34;,\r\u0026#34;Priority\u0026#34;: 0\r}\r]\r}\rVà cuối cùng chúng ta sẽ được rule như sau:\n{\r\u0026#34;Name\u0026#34;: \u0026#34;complex-rule-example\u0026#34;,\r\u0026#34;Priority\u0026#34;: 0,\r\u0026#34;Action\u0026#34;: {\r\u0026#34;Block\u0026#34;: {}\r},\r\u0026#34;VisibilityConfig\u0026#34;: {\r\u0026#34;SampledRequestsEnabled\u0026#34;: true,\r\u0026#34;CloudWatchMetricsEnabled\u0026#34;: true,\r\u0026#34;MetricName\u0026#34;: \u0026#34;complex-rule-example\u0026#34;\r},\r\u0026#34;Statement\u0026#34;: {\r\u0026#34;OrStatement\u0026#34;: {\r\u0026#34;Statements\u0026#34;: [\r{\r\u0026#34;SizeConstraintStatement\u0026#34;: {\r\u0026#34;FieldToMatch\u0026#34;: {\r\u0026#34;Body\u0026#34;: {}\r},\r\u0026#34;ComparisonOperator\u0026#34;: \u0026#34;GT\u0026#34;,\r\u0026#34;Size\u0026#34;: \u0026#34;100\u0026#34;,\r\u0026#34;TextTransformations\u0026#34;: [\r{\r\u0026#34;Type\u0026#34;: \u0026#34;NONE\u0026#34;,\r\u0026#34;Priority\u0026#34;: 0\r}\r]\r}\r},\r{\r\u0026#34;NotStatement\u0026#34;: {\r\u0026#34;Statement\u0026#34;: {\r\u0026#34;ByteMatchStatement\u0026#34;: {\r\u0026#34;FieldToMatch\u0026#34;: {\r\u0026#34;SingleHeader\u0026#34;: {\r\u0026#34;Name\u0026#34;: \u0026#34;x-upload-body\u0026#34;\r}\r},\r\u0026#34;PositionalConstraint\u0026#34;: \u0026#34;EXACTLY\u0026#34;,\r\u0026#34;SearchString\u0026#34;: \u0026#34;true\u0026#34;,\r\u0026#34;TextTransformations\u0026#34;: [\r{\r\u0026#34;Type\u0026#34;: \u0026#34;NONE\u0026#34;,\r\u0026#34;Priority\u0026#34;: 0\r}\r]\r}\r}\r}\r}\r]\r}\r}\r}\r"
},
{
	"uri": "/vi/5-testing/",
	"title": "Kiểm thử Rule mới",
	"tags": [],
	"description": "",
	"content": "Trước khi triển khai một rule mới, bạn cần phải kiểm thử để chắc chắn bạn không vô tình chặn các request hợp lệ.\nỞ những phần trước, bạn đã sử dụng Block và Allow khi định nghĩa các hành động khi đánh giá request. Bên cạnh đó, bạn có một lựa chọn khác là Count. Count cho phép bạn đánh giá số lượng request trùng với điều kiện rule của bạn.\nCount không phải là hành động ngăn chặn. Khi một request khớp rule có hành động Count, Web ACL sẽ tiếp tục xử lý các rule khác.\nCác rule hoặc nhóm rule dựng sẵn cũng có thể kiểm thử sử dụng Count.\n\rNội dung\n Xem bộ đếm Rule  Xem bộ đếm Rule Khi một rule có hành động Count khớp với request, sự kiện này được thêm vào CloudWatch metrics. Để xem bộ đếm của một rule, bạn truy cập vào CloudWatch metrics console. Chọn AWS/WAFv2, sau đó chọn Region \u0026gt; Rule \u0026gt; WebACL để xem metric đó.\nMặc định, giá trị Average sẽ được hiển thị các metric WAF. Bạn có thể đổi sang giá trị Sum để phân tích đánh giá.\n\r"
},
{
	"uri": "/vi/7-clean-up/",
	"title": "Thu hồi tài nguyên",
	"tags": [],
	"description": "",
	"content": "Trước khi bạn kết thúc bài thực hành này, hãy đảm bảo xóa các tài nguyên bạn không cần nữa.\nDưới đây là danh sách các tài nguyên bạn đã tạo trong bài thực hành này.\n Ứng dụng Web Mẫu WAF web ACL Kinesis Data Firehose S3 Bucket  Dưới đây là hướng dẫn về cách xóa các tài nguyên này.\nỨng dụng Web Mẫu Ứng dụng Web Mẫu được định nghĩa trong CloudFormation stack, đặt tên là WAFWorkshopSampleWebApp.\nLàm theo các bước trong tài liệu Xóa một CloudFormation Stack.\nỨng dụng Web Mẫu là một nested stack. Bằng cách xóa stack chính, các nnested stack được chứa bên trong cũng sẽ bị xóa.\n\rWAF web ACL Làm theo các bước trong tài liệu Xóa một Web ACL.\nKinesis Data Firehose  Truy cập vào trang Kinesis console Chọn tab Data Firehose. Nếu bạn không thể thấy tài nguyên, hãy kiểm tra region của bạn. Tài nguyên này phải ở us-east-1. Điều này có thể khác với khu vực được sử dụng để triển khai Ứng dụng web Xóa Data Firehose bạn đã tạo trước đó. Nó sẽ có tiền tố là aws-waf-logs-workshop-  S3 Bucket  Truy cập đến S3 Console. Chọn S3 bucket được sử dụng làm đích Kinesis Data Firehose. Nó sẽ có tiền tố aws-waf-logs-workshop- Nếu bạn không thể thấy tài nguyên, hãy kiểm tra region của bạn. Tài nguyên này phải ở us-east-1. Điều này có thể khác với khu vực được sử dụng để triển khai Ứng dụng web Xóa các tập tin trong bucket. Xóa bucket.  "
},
{
	"uri": "/vi/6-logging/",
	"title": "6-loggings",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]